/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;
import javax.swing.*;
import model.Produk;
import model.Transaksi;
import service.Database;
import java.util.List;



/**
 *
 * @author Asus
 */
public class KasirFrame extends JFrame {

    /**
     * Creates new form Kasir
     */
    public KasirFrame() {
        initComponents();
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLihatTransaksi = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jNamaProduk = new javax.swing.JTextField();
        jStok = new javax.swing.JTextField();
        jTambahTransaksi = new javax.swing.JButton();
        jKembali = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jHapusTransaksi = new javax.swing.JButton();

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jList1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(102, 153, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 339, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
        );

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        jLihatTransaksi.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        jLihatTransaksi.setText("Lihat Transaksi");
        jLihatTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLihatTransaksiActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        jLabel1.setText("Nama Produk");

        jLabel2.setFont(new java.awt.Font("Microsoft Tai Le", 1, 14)); // NOI18N
        jLabel2.setText("Stok");

        jNamaProduk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jNamaProdukActionPerformed(evt);
            }
        });

        jStok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jStokActionPerformed(evt);
            }
        });

        jTambahTransaksi.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jTambahTransaksi.setText("Tambah Transaksi");
        jTambahTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTambahTransaksiActionPerformed(evt);
            }
        });

        jKembali.setFont(new java.awt.Font("Segoe UI Historic", 1, 12)); // NOI18N
        jKembali.setText("Kembali");
        jKembali.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jKembaliActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel3.setText("Kasir");

        jHapusTransaksi.setFont(new java.awt.Font("Segoe UI Black", 1, 12)); // NOI18N
        jHapusTransaksi.setText("Hapus Transaksi");
        jHapusTransaksi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jHapusTransaksiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLihatTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jKembali, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jStok, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(52, 52, 52)
                        .addComponent(jNamaProduk))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jHapusTransaksi, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTambahTransaksi))))
                .addGap(27, 27, 27))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(140, 140, 140)
                .addComponent(jLabel3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel3)
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jNamaProduk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(58, 58, 58)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jStok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(jTambahTransaksi)
                .addGap(41, 41, 41)
                .addComponent(jHapusTransaksi)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jKembali)
                    .addComponent(jLihatTransaksi))
                .addGap(32, 32, 32))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLihatTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLihatTransaksiActionPerformed
        // TODO add your handling code here:
      StringBuilder sb = new StringBuilder();
        for (Transaksi t : Database.getDaftarTransaksi()) {
            sb.append(t).append("\n");
        }
    
        JOptionPane.showMessageDialog(this, sb.toString(), "Daftar Transaksi", JOptionPane.INFORMATION_MESSAGE);
        
    }//GEN-LAST:event_jLihatTransaksiActionPerformed

    private void jTambahTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTambahTransaksiActionPerformed
    String namaProduk = jNamaProduk.getText().trim();
    String stokInput = jStok.getText().trim();
    
    if (namaProduk.isEmpty() || stokInput.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Nama produk dan stok tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    
    int jumlah;
    try {
        jumlah = Integer.parseInt(stokInput); 
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Stok harus berupa angka.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Cari produk berdasarkan nama
    Produk produk = null;
    for (Produk p : Database.getDaftarProduk()) {
        if (p.getNama().equalsIgnoreCase(namaProduk)) {
            produk = p;
            break;
        }
    }
    
    if (produk == null) {
        
        JOptionPane.showMessageDialog(this, "Produk tidak ditemukan.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (jumlah <= 0) {
        JOptionPane.showMessageDialog(this, "Jumlah harus lebih dari 0.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    if (produk.getStok() < jumlah) {
        JOptionPane.showMessageDialog(this, "Stok produk tidak mencukupi.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }
    

    Transaksi transaksi = new Transaksi(produk, jumlah);

    try {
        Database.simpanTransaksiKeDatabase(transaksi);
        Database.loadTransaksiFromDatabase();
        JOptionPane.showMessageDialog(this, "Transaksi berhasil: " + transaksi.toString(), "Sukses", JOptionPane.INFORMATION_MESSAGE);
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Gagal menyimpan transaksi ke database: " + e.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jTambahTransaksiActionPerformed

    private void jKembaliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jKembaliActionPerformed
        // TODO add your handling code here:
            this.dispose();
            new LoginFrame().setVisible(true);
    }//GEN-LAST:event_jKembaliActionPerformed

    private void jNamaProdukActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jNamaProdukActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jNamaProdukActionPerformed

    private void jStokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jStokActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jStokActionPerformed

    private void jHapusTransaksiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jHapusTransaksiActionPerformed
        // TODO add your handling code here:
// try {
//        String namaProduk = JOptionPane.showInputDialog(this, "Masukkan nama produk dari transaksi yang ingin dihapus:");
//        if (namaProduk == null || namaProduk.trim().isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Nama produk tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
//            return;
//        }
//
//        String tanggal = JOptionPane.showInputDialog(this, 
//            "Masukkan tanggal transaksi (format: yyyy-MM-dd HH:mm:ss) atau kosongkan jika ingin hapus semua transaksi dengan nama tersebut:");
//
//        int konfirmasi = JOptionPane.showConfirmDialog(this,
//            tanggal == null || tanggal.trim().isEmpty() ?
//                "Yakin ingin menghapus SEMUA transaksi untuk produk: " + namaProduk + "?" :
//                "Yakin ingin menghapus transaksi untuk produk: " + namaProduk + " pada " + tanggal + "?",
//            "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);
//
//        if (konfirmasi != JOptionPane.YES_OPTION) return;
//
//        boolean berhasil;
//
//        if (tanggal == null || tanggal.trim().isEmpty()) {
//            
//            berhasil = Database.hapusTransaksiByNamaProduk(namaProduk);
//        } else {
//            // Hapus transaksi spesifik berdasarkan nama dan tanggal
//            Produk dummyProduk = new ProdukDiskon(namaProduk, 0.0, 0, 0.0, 0.0);
//            Transaksi transaksi = new Transaksi(dummyProduk, 0, tanggal); 
//            berhasil = Database.hapusTransaksi(transaksi);
//        }
//
//        if (berhasil) {
//            JOptionPane.showMessageDialog(this, "Transaksi berhasil dihapus.");
//        } else {
//            JOptionPane.showMessageDialog(this, "Transaksi tidak ditemukan.", "Gagal", JOptionPane.ERROR_MESSAGE);
//        }
//
//    } catch (Exception e) {
//        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
//    }










    try {
        String namaProduk = JOptionPane.showInputDialog(this, "Masukkan nama produk dari transaksi yang ingin dihapus:");
        if (namaProduk == null || namaProduk.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nama produk tidak boleh kosong.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        String tanggal = JOptionPane.showInputDialog(this, 
            "Masukkan tanggal transaksi (format: yyyy-MM-dd HH:mm:ss) atau kosongkan jika ingin hapus semua transaksi dengan nama tersebut:");

        int konfirmasi = JOptionPane.showConfirmDialog(this,
            tanggal == null || tanggal.trim().isEmpty() ?
                "Yakin ingin menghapus SEMUA transaksi untuk produk: " + namaProduk + "?" :
                "Yakin ingin menghapus transaksi untuk produk: " + namaProduk + " pada " + tanggal + "?",
            "Konfirmasi Hapus", JOptionPane.YES_NO_OPTION);

        if (konfirmasi != JOptionPane.YES_OPTION) return;

        boolean berhasil = false;

        if (tanggal == null || tanggal.trim().isEmpty()) {
            // Ambil semua transaksi terkait dan kembalikan stok
            List<Transaksi> transaksiList = Database.cariTransaksiByNamaProduk(namaProduk);
            for (Transaksi t : transaksiList) {
                Produk produk = Database.cariProduk(namaProduk);
                if (produk != null) {
                    produk.tambahStok(t.getJumlah()); // Tambah kembali stok
                }
                Database.hapusTransaksi(t);
            }
            berhasil = !transaksiList.isEmpty();
        } else {
            // Hapus transaksi spesifik
            Transaksi transaksi = Database.cariTransaksi(namaProduk, tanggal);
            if (transaksi != null) {
                Produk produk = Database.cariProduk(namaProduk);
                if (produk != null) {
                    produk.tambahStok(transaksi.getJumlah());
                }
                berhasil = Database.hapusTransaksi(transaksi);
            }
        }

        if (berhasil) {
            JOptionPane.showMessageDialog(this, "Transaksi berhasil dihapus dan stok dikembalikan.");
        } else {
            JOptionPane.showMessageDialog(this, "Transaksi tidak ditemukan.", "Gagal", JOptionPane.ERROR_MESSAGE);
        }

    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Terjadi kesalahan: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_jHapusTransaksiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KasirFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KasirFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KasirFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KasirFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new KasirFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jHapusTransaksi;
    private javax.swing.JButton jKembali;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JButton jLihatTransaksi;
    private javax.swing.JList<String> jList1;
    private javax.swing.JTextField jNamaProduk;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jStok;
    private javax.swing.JButton jTambahTransaksi;
    // End of variables declaration//GEN-END:variables
}
